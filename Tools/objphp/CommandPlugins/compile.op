<?php
/*
 * compile.op
 *
 * This file is part of Objective-PHP <http://www.atimport.net/>.
 *
 * Copyright (c) 2009-2011, Stephen Paul Ierodiaconou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Stephen Ierodiaconou nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// compile plugin
@implementation compile : MKObject <ICommandPlugin>

- (void)help
{
?>
    format: compile <Options> <InputFile> <InputFile> ... -o=<OutputFilename>
        Options:
            -o, --output=<file> : Outputfile
            -b, --hashbang      : Add "#!/usr/bin/php" to top of file
            -x, --executable    : Set +x permissions on output file
            -f, --force         : Force overwrite of existing output file
            -v, --verbose       : Enable verbose output
            -s, --silent        : Silence output
            -h, --help          : This help
<?php
}

- (void)doWithParameters:(MKDictionary)params
{
    $op_mode = 1;
    $force = false;
    $hashbang = false;
    $outputFilename = false;
    $inputFiles = array();
    $setx = false;
    // parse args
    if ([$params count])
    {
        // 0 is command name
        foreach ([$params _PHParray] as $argname => $argval)
        {
            if ($argname === 0)
            {
            }
            else if ($argname === 'o' || $argname === 'output')
            {
                $outputFilename = $argval;
            }
            else if ($argname === 's' || $argname === 'silent')
            {
                $op_mode = 0;
                MKLog("Output Silenced");
            }
            else if ($argname === 'v' || $argname === 'verbose')
            {
                MKLog("Verbose output enabled");
                $op_mode = 2;
            }
            else if ($argname === 'f' || $argname === 'force')
            {
                MKLog("Output force enabled");
                $force = true;
            }
            else if ($argname === 'h' || $argname === 'help')
            {
                [$self help];
            }
            else if ($argname === 'b' || $argname === 'hashbang')
            {
                $hashbang = true;
            }
            else if ($argname === 'x' || $argname === 'executable')
            {
                $setx = true;
            }
            else if (is_int($argname))
            {
                $inputFiles[] = $argval;
            }
        }

        try
        {
            if (is_string($outputFilename))
            {
                // check if exists and if --force
                if ((file_exists($outputFilename) && $force) || !file_exists($outputFilename))
                {
                    if (count($inputFiles))
                    {
                        $processor = new \ObjPHP\PreProcessor();
                        $source = "<?php\n//Generated: ".strftime("%c")."\ndefine('OBJPHP_INCLUDE_PATH', exec('echo \$OBJPHP'));\nset_include_path( OBJPHP_INCLUDE_PATH . PATH_SEPARATOR . OBJPHP_INCLUDE_PATH.\"/Moka/\"  . PATH_SEPARATOR. __DIR__);\ninclude_once 'Objective-PHP/runtime.php';";
                        if ($op_mode > 0)
                            MKLog("Output file: $outputFilename");
                        foreach($inputFiles as $fileName)
                        {
                            if ($op_mode > 0)
                                MKLog("Compiling: $fileName");

                            if ($code = $processor->loadObjPHPFile($fileName, true))
                            {
                                $source .= "\n//Compiled: $fileName\n".$code;
                            }
                            else
                                throw new \ObjPHP\CountableException("Compilation Failure.");
                        }

                        if ($op_mode > 1)
                            MKLog("Total Compile Time: ".$processor->Parser()->getTime());

                        // write out result
                        if (file_put_contents($outputFilename, (($hashbang)?("#!/usr/bin/php\n"):("")).$source, FILE_TEXT) === false)
                            throw new \ObjPHP\CountableException("The output file is not writable. Check that the drive is not read-only.");
                        if ($setx)
                            chmod($outputFilename, 0755);
                    }
                    else
                        throw new \ObjPHP\CountableException("No input files where specified. Use -h to get help on this command.");
                }
                else
                    throw new \ObjPHP\CountableException("The output file already exists. Use -f or --force to overwrite the existing file.");
             }
             else
                throw new \ObjPHP\CountableException("No output file specified! Use -o= or --output= to specify the output filename.");

        } catch( \ObjPHP\CountableException $e )
        {
            MKLog("Exception thrown by compiler: ".$e->getMessage());
        }
    }
}

@end


[$self addPlugin:[[compile alloc] init] withName:"compile"];
